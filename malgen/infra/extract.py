import zlib
from pathlib import Path
from tqdm.contrib.concurrent import thread_map
import argparse
from math import ceil


def decompress_all(dir, out, rank=0, world_size=200):
    dir = Path(dir)
    out = Path(out)
    paths = list(dir.iterdir())
    n_per_node = ceil(len(paths) / world_size)
    assigned = paths[n_per_node * rank : n_per_node * (rank + 1)]

    def decompress(path):
        outpath = out / path.name
        if not outpath.is_file():
            with open(path, "rb", buffering=0) as stream:
                bin = stream.readall()
            decompressed = zlib.decompress(bin)
            with open(outpath, "wb") as outfile:
                outfile = open(out / path.name, "wb")
                outfile.write(decompressed)

    thread_map(decompress, assigned)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-rank", type=int)
    parser.add_argument("-world_size", type=int)
    parser.add_argument("-dir", type=str)
    parser.add_argument("-out", type=str)
    args = parser.parse_args()
    print(args)
    decompress_all(args.dir, args.out, args.rank, args.world_size)
