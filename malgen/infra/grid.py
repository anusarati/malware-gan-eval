from pathlib import Path
import random
from matplotlib import gridspec
import matplotlib.pyplot as plt
import argparse
from malgen.infra.constants import CATEGORIES
import itertools
from PIL import Image
import numpy as np

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--idir", type=str)
    parser.add_argument("-n", "--num_imgs_per_class", type=int, default=10)
    parser.add_argument("-l", "--label", type=argparse.BooleanOptionalAction)
    args = parser.parse_args()
    print(args)
    idir = Path(args.idir)
    # expect a bunch of directories here
    paths = list(idir.iterdir())

    num_imgs_per_class = args.num_imgs_per_class
    num_classes = 11
    images = []

    for i in range(num_classes):
        class_dir = idir / str(i)
        if not class_dir.is_dir():
            class_dir = idir / CATEGORIES[i]
            assert class_dir.is_dir()

        class_images = list(filter(lambda p: p.suffix == ".png", class_dir.iterdir()))
        class_images = random.sample(class_images, num_imgs_per_class)

        assert len(class_images) == num_imgs_per_class
        images.append(class_images)

    # https://stackoverflow.com/a/41075262
    fig = plt.figure(figsize=(num_imgs_per_class + 1, num_classes + 1))
    gs = gridspec.GridSpec(
        nrows=num_classes,
        ncols=num_imgs_per_class,
        wspace=0.0,
        hspace=0.0,
        top=1.0 - 0.5 / (num_classes + 1),
        bottom=0.5 / (num_classes + 1),
        left=0.5 / (num_imgs_per_class + 1),
        right=1 - 0.5 / (num_imgs_per_class + 1),
    )

    for i in range(num_classes):
        label = "\n".join(CATEGORIES[i].split("_"))
        if args.label:
            plt.subplot(gs[i, 0]).set_ylabel(label, size="large")
        for j in range(num_imgs_per_class):
            image = Image.open(images[i][j])
            ax = plt.subplot(gs[i, j])
            ax.imshow(
                np.asarray(image),
                cmap="gray" if image.mode == "L" else "viridis",
                vmin=0,
                vmax=255,
            )
            ax.set(xticklabels=[], yticklabels=[], xticks=[], yticks=[])

    plt.subplots_adjust(left=0.01, wspace=0, hspace=0)

    save_path = f"{''.join(idir.parts[-2:])}-plot.png"
    plt.savefig(save_path, dpi=600)
    print(save_path)
