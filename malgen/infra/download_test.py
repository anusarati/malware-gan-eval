import argparse
import pandas as pd
import boto3
from botocore import UNSIGNED
from botocore.client import Config
from pathlib import Path
from tqdm.contrib.concurrent import thread_map
from math import ceil


def download_files(rank, world_size):
    s3 = boto3.client('s3', config=Config(signature_version=UNSIGNED))
    OUTDIR = Path("statout/test")
    OUTDIR.mkdir(parents=True, exist_ok=True)
    filenames = pd.read_pickle("test.pkl")["sha256"].array
    n_per_node = ceil(len(filenames) / world_size)
    assigned = filenames[n_per_node * rank : n_per_node * (rank + 1)]

    def download(filename):
        s3.download_file("sorel-20m", filename, OUTDIR / filename)

    thread_map(download, assigned)


if __name__ == "__main__":

    parser = argparse.ArgumentParser()
    parser.add_argument("-rank", type=int)
    parser.add_argument("-world_size", type=int)
    args = parser.parse_args()
    download_files(args.rank, args.world_size)
