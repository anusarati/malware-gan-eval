"""Resize a directory of images"""

from pathlib import Path
import argparse
from math import ceil
from tqdm.contrib.concurrent import thread_map
import os
import shutil
from PIL import Image


def resize(idir, odir, size, rank, world_size):
    idir = Path(idir)
    odir = Path(odir)

    paths = []
    for dir, _, fnames in os.walk(idir):
        for fname in fnames:
            reldir = os.path.join(dir.parts[1:])
            paths.append(Path(reldir) / fname)

    n_per_node = ceil(len(paths) / world_size)
    assigned_paths = paths[n_per_node * rank : n_per_node * (rank + 1)]

    def _resize(path):
        ipath = idir / path
        opath = odir / path
        if ipath.suffix == ".png":
            image = Image.open(ipath)
            image = image.resize((size, size))
            image.save(opath)
        else:
            shutil.copy(ipath, opath)

    thread_map(_resize, assigned_paths)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-rank", type=int)
    parser.add_argument("-i", "--idir", type=str, required=True)
    parser.add_argument("-o", "--odir", type=str, required=True)
    parser.add_argument("-size", required=True, type=int)
    parser.add_argument("-world_size", type=int)
    args = parser.parse_args()
    print(args, flush=True)
    resize(
        idir=args.idir,
        odir=args.odir,
        size=args.size,
        rank=args.rank,
        world_size=args.world_size,
    )
