"""Reduce mapped files"""

import pickle
import json
from pathlib import Path
import argparse

parser = argparse.ArgumentParser()


def reduce(idir, rfun, init, name):
    aggregate = init
    prefix = f"_{name}"
    for path in Path(idir).iterdir():
        if prefix in path.name:
            with open(path, "rb") as f:
                local = pickle.load(f)
                aggregate = rfun(aggregate, local)

    return aggregate


parser.add_argument("-mode", type=str, default="pylabel")
parser.add_argument("-dir", type=str, default=".")
args = parser.parse_args()

if args.mode == "stylabel":
    labels = reduce(args.dir, lambda x, y: x + y, [], "labels")
    # StyleGAN
    with open("dataset.json", "w") as f:
        json.dump({"labels": labels}, f)
elif args.mode == "pylabel":
    labels = reduce(args.dir, lambda x, y: x | y, {}, "labels")
    with open("labels.pkl", "wb") as f:
        pickle.dump(labels, f)
elif args.mode == "statsize":

    def add_freqs(agg: dict, local: dict):
        for size, freq in local.items():
            agg.setdefault(size, 0)
            agg[size] += freq
        return agg

    size_freqs = reduce(args.dir, add_freqs, {}, "sizefreqs")
    with open("sizefreqs.pkl", "wb") as f:
        pickle.dump(size_freqs, f)
else:
    print(f"Mode {args.mode} not recognized")
